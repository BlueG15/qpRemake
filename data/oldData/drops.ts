//sellectable drop pool and their corresponding cards in that loot pool
//the cardList contain the keys/card code name correspondin to the card

import { LootSet } from "./cards";

export const drops: DropType[] = [
  {
    codeName: "generic",
    displayName: "generic",
    imgId: "genericFireball",
    cardList: [
      "genericAfterburner",
      "genericAvarice",
      "genericBattery",
      "genericBearTrap",
      "genericCapacitor",
      "genericCinder",
      "genericConstantCorrection",
      "genericCrystalBall",
      "genericDoubleExecute",
      "genericEmber",
      "genericFireball",
      "genericFlashAttack",
      "genericFlashbang",
      "genericForce",
      "genericInferno",
      "genericMagicEmber",
      "genericMagicFlare",
      "genericMegaRush",
      "genericOmen",
      "genericPendulum",
      "genericPureHeart",
      "genericReincarnation",
      "genericScalpel",
      "genericShatter",
      "genericSpark",
      "genericThunderclap",
      "genericTreasure",
      "genericUpdraft",
      "genericTaser",
      "genericAmbush",
      "genericRupture",
      "consumablePotionHealth",
      "consumablePotionStorage",
      "consumablePotionVoid",
    ],
  },
  {
    codeName: "chess",
    displayName: "chess",
    imgId: "chessPawn",
    cardList: [
      "chessBishop",
      "chessKing",
      "chessKnight",
      "chessPawn",
      "chessQueen",
      "chessRook",
    ],
  },
  {
    codeName: "natural",
    displayName: "fruit",
    imgId: "naturalApple",
    cardList: [
      "naturalApple",
      "naturalBanana",
      "naturalCherry",
      "naturalDemeter",
      "naturalFall",
      "naturalGreenhouse",
      "naturalGrowth",
      "naturalLemon",
      "naturalPersephone",
      "naturalPollination",
      "naturalPomegranate",
      "naturalPumpkin",
      "naturalSpring",
      "naturalSummer",
      "naturalWinter",
    ],
  },
  {
    codeName: "mdv",
    displayName: "mech",
    imgId: "mdvAxe",
    cardList: [
      "mdvAxe",
      "mdvCore",
      "mdvGatling",
      "mdvHammer",
      "mdvHydro",
      "mdvPlasma",
      "mdvPod",
      "mdvRocket",
      "mdvSpear",
      "mdvSword",
      "mdvThunder",
      "mdvTower",
      "mdvUnity",
    ],
  },
  {
    codeName: "music",
    displayName: "muse",
    imgId: "musicQuarter",
    cardList: [
      "musicBass",
      "musicDoubleEighth",
      "musicEqualize",
      "musicFermata",
      "musicForte",
      "musicIdol1",
      "musicIdol2",
      "musicIdol3",
      "musicIdol4",
      "musicIdol5",
      "musicIdolBoss",
      "musicPiano",
      "musicQuarter",
      "musicQuarterRest",
      "musicTreble",
      "musicTriplet",
    ],
  },
  {
    codeName: "mage",
    displayName: "mage",
    imgId: "mageSorcIgnis",
    cardList: [
      "mageSorcIgnis",
      "mageSorcEffingo",
      "mageSorcCreo",
      "mageSorcGravitas",
      "mageSorcPotentia",
      "mageSorcTempus",
      "mageSorcLux",
      "mageLucia",
      "mageAurelia",
      "mageCamilla",
      "mageMariana",
      "mageOctavia",
      "mageValeria",
      "mageDecima",
    ],
  },
  {
    codeName: "mahou",
    displayName: "mahou",
    imgId: "mahouWish",
    cardList: [
      "mahouBunnyFire",
      "mahouGirlFire",
      "mahouBunnyEarth",
      "mahouGirlEarth",
      "mahouBunnyWind",
      "mahouGirlWind",
      "mahouBunnyWater",
      "mahouGirlWater",
      "mahouBunnyDark",
      "mahouGirlDark",
      "mahouBunnyLight",
      "mahouGirlLight",
      "mahouWish",
      "mahouHeartTrial",
    ],
  },
  {
    codeName: "cross",
    displayName: "cross",
    imgId: "crossEleHeat",
    cardList: [
      "crossEleHeat",
      "crossEleCold",
      "crossEleShock",
      "crossEleWave",
      "crossLea",
      "crossEmilienator",
      "crossCtron",
      "crossLukas",
      "crossApollo",
      "crossJoern",
      "crossHlin",
      "crossBuggy",
      "crossAlbert",
      "crossShizuka",
    ],
  },
  {
    codeName: "spirit",
    displayName: "spirit",
    imgId: "spiritKitsune",
    cardList: [
      "spiritAmaterasu",
      "spiritKitsune",
      "spiritKusanagi",
      "spiritMagatama",
      "spiritNeko",
      "spiritNezumi",
      "spiritSika",
      "spiritTanzaku",
      "spiritTsukuyomi",
      "spiritTsuru",
      "spiritWatatsumi",
      "spiritYamata",
      "spiritYata",
    ],
  },
  {
    codeName: "sakura",
    displayName: "hana",
    imgId: "sakuraStorm",
    cardList: [
      "sakuraBow",
      "sakuraKatana",
      "sakuraKunai",
      "sakuraLantern",
      "sakuraNinja1",
      "sakuraNinja2",
      "sakuraNinja3",
      "sakuraNinja4",
      "sakuraNinjaBoss",
      "sakuraPriestess",
      "sakuraShide",
      "sakuraStorm",
      "sakuraTorii",
    ],
  },
  {
    codeName: "eden",
    displayName: "eden",
    imgId: "edenSaffron",
    cardList: [
      "edenSaffron",
      "edenThunder",
      "edenGunner",
      "edenReva",
      "edenHazel",
      "edenSelicy",
      "edenShiso",
      "edenTerra",
      "edenViolette",
      "edenStepSlash",
      "edenBowSnipe",
      "edenWave",
      "edenRagnarok",
      "edenShopkeeper",
      "edenCrossfire",
    ],
  },
  {
    codeName: "vamp",
    displayName: "legion",
    imgId: "vampRevival",
    cardList: [
      "vampGen1",
      "vampGen2",
      "vampHyper",
      "vampLieu1",
      "vampLieu2",
      "vampOrb",
      "vampOrigin",
      "vampPlunge",
      "vampRevival",
      "vampShield",
      "vampSol1",
      "vampSol2",
      "vampSol3",
      "vampSpear",
      "vampSword",
    ],
  },
  {
    codeName: "fantasy",
    displayName: "myth",
    imgId: "fantasyPhoenix",
    cardList: [
      "fantasyArae",
      "fantasyCockatrice",
      "fantasyGolem",
      "fantasyGriffin",
      "fantasyMermaid",
      "fantasyPhoenix",
      "fantasyUnicorn",
    ],
  },
  {
    codeName: "vault",
    displayName: "vault",
    imgId: "vaultAgility",
    cardList: [
      "vaultSlash",
      "vaultBlade",
      "vaultJab",
      "vaultApprentice",
      "vaultMultiBlade",
      "vaultBide",
      "vaultJuggle",
      "vaultOnceMore",
      "vaultAgility",
      "vaultLightUp",
      "vaultOpportunist",
      "vaultParry",
    ],
  },
  {
    codeName: "nova",
    displayName: "nova",
    imgId: "novaStandard",
    cardList: [
      "novaStandard",
      "novaAssault",
      "novaSentinel",
      "novaResearch",
      "novaCarrier",
      "novaCarrier_minion",
      "novaArchitect",
      "novaLeviathan",
      "novaFusillade",
      "novaHighExplosive",
      "novaHeavyCaliber",
      "novaTacLink",
      "novaBarrier",
      "novaStrike",
      "novaLance",
      "novaAtaraxia",
    ],
  },
];

const availCode = drops.map((d) => d.codeName);
const displayToCode: { [n: string]: string } = {};

for (let i = 0; i < availCode.length; i++) {
  displayToCode[availCode[i]] = availCode[i];
}

export interface DropType {
  codeName: string;
  displayName: string;
  imgId: string;
  cardList: string[];
}

export function getDropFromLootSet(lootSet: LootSet) {
  return drops.filter((a) => a.codeName === lootSet.setName)[0];
}

export function getImgUrl(lootSet: LootSet) {
  return window.origin + "/cards/" + getDropFromLootSet(lootSet)?.imgId;
}

export function checkForDropCode(code: string): string | null {
  if (!availCode.includes(code)) {
    return displayToCode[code] ?? null;
  }

  return code;
}
